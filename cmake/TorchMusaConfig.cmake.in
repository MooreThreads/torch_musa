include(FindPackageHandleStandardArgs)

if(DEFINED ENV{TorchMusa_INSTALL_PREFIX})
  set(TorchMusa_INSTALL_PREFIX $ENV{TorchMusa_INSTALL_PREFIX})
else()
  # Assume we are in <install-prefix>/share/cmake/TorchMusaConfig.cmake
  get_filename_component(CMAKE_CURRENT_LIST_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
  get_filename_component(TorchMusa_INSTALL_PREFIX "${CMAKE_CURRENT_LIST_DIR}/../../.." ABSOLUTE)
endif()

list(APPEND TorchMusa_INCLUDE_DIRS ${TorchMusa_INSTALL_PREFIX})
find_library(TorchMusa_LIBRARY REQUIRED NAMES musa_python PATHS "${TorchMusa_INSTALL_PREFIX}/torch_musa/lib" REQUIRED)
list(APPEND TorchMusa_LIBRARIES ${TorchMusa_LIBRARY})

# For looking for TorchConfig.cmake
get_filename_component(PYTHON_PACKAGE_PATH "${TorchMusa_INSTALL_PREFIX}/.." ABSOLUTE)
find_library(TorchPython_LIBRARY torch_python PATHS "${PYTHON_PACKAGE_PATH}/torch/lib" REQUIRED)
list(APPEND TorchMusa_LIBRARIES ${TorchPython_LIBRARY})

list(APPEND CMAKE_PREFIX_PATH "${PYTHON_PACKAGE_PATH}/torch/share/cmake/Torch")
find_package(Torch REQUIRED)
if(TORCH_LIBRARIES)
list(APPEND TorchMusa_LIBRARIES ${TORCH_LIBRARIES})                             
endif()

find_package(MUDNN)                                                                                                                                                                                                                                                             
if(MUDNN_FOUND)
  list(APPEND DEPENDENT_INCLUDE_DIRS ${MUDNN_INCLUDE_DIRS})
  list(APPEND DEPENDENT_LIBRARIES ${MUDNN_LIBRARIES})
else()
  # set default mudnn library path
  message(WARNING "The environment variable MUSA_HOME not specified. Using default MUDNN PATH: /usr/local/musa")
  list(APPEND DEPENDENT_INCLUDE_DIRS "/usr/local/musa/include")
  list(APPEND DEPENDENT_LIBRARIES "/usr/local/musa/lib/libmudnn.so")
endif()

find_package(MUSAToolkits)
if(MUSAToolkits_FOUND)
  list(APPEND DEPENDENT_INCLUDE_DIRS ${MUSAToolkits_INCLUDE_DIRS})
  list(APPEND DEPENDENT_LIBRARIES ${MUSAToolkits_LIBRARIES})
else()
  # set default musa_toolkits path
  message(WARNING "The environment variable MUSA_HOME not specified. Using default MUSATOOLKITS PATH: /usr/local/musa")
  list(APPEND DEPENDENT_INCLUDE_DIRS "/usr/local/musa/include/")
  list(APPEND DEPENDENT_LIBRARIES "/usr/local/musa/lib/libmusart.so")
endif()

# list(APPEND TorchMusa_LIBRARIES ${DEPENDENT_LIBRARIES})
find_library(PYTHON_LIBRARY python3 PATHS "${PYTHON_PACKAGE_PATH}/../..")
list(APPEND TorchMusa_LIBRARIES ${PYTHON_LIBRARY})
include_directories(${TorchMusa_INCLUDE_DIRS})
include_directories(${TORCH_INCLUDE_DIRS})
include_directories(${DEPENDENT_INCLUDE_DIRS})

find_package_handle_standard_args(TorchMusa DEFAULT_MSG TorchMusa_LIBRARIES TorchMusa_INCLUDE_DIRS)
