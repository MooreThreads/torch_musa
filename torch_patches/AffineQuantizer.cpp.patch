diff --git a/aten/src/ATen/native/quantized/AffineQuantizer.cpp b/aten/src/ATen/native/quantized/AffineQuantizer.cpp
index dbda6ebd5f..2ee427427d 100644
--- a/aten/src/ATen/native/quantized/AffineQuantizer.cpp
+++ b/aten/src/ATen/native/quantized/AffineQuantizer.cpp
@@ -159,7 +159,7 @@ Tensor& quantize_tensor_per_channel_affine(
 
   AT_DISPATCH_QINT_TYPES(qtensor.scalar_type(), fn_name, [&]() {
     checkQuantizedTensor<scalar_t>(fn_name, qtensor);
-    if(qtensor.device().type() != c10::DeviceType::CUDA){
+    if(qtensor.device().type() != c10::DeviceType::CUDA && qtensor.device().type() != c10::DeviceType::PrivateUse1){
       checkZeroPoints<underlying_t>(fn_name, zero_points);
     }  // for cuda, this check will occur in the actual cuda function
   });
@@ -251,7 +251,7 @@ Tensor& dequantize_tensor_per_channel_affine(
 
   AT_DISPATCH_QINT_TYPES(qtensor.scalar_type(), fn_name, [&]() {
     checkQuantizedTensor<scalar_t>(fn_name, qtensor);
-    if(qtensor.device().type() != c10::DeviceType::CUDA){
+    if(qtensor.device().type() != c10::DeviceType::CUDA && qtensor.device().type() != c10::DeviceType::PrivateUse1){
       checkZeroPoints<underlying_t>(fn_name, zero_points);
     }  // for cuda, this check will occur in the actual cuda function
   });
