diff --git a/c10/core/DeviceType.cpp b/c10/core/DeviceType.cpp
index ac4c1f653e..94eaa83236 100644
--- a/c10/core/DeviceType.cpp
+++ b/c10/core/DeviceType.cpp
@@ -45,8 +45,8 @@ std::string DeviceTypeName(DeviceType d, bool lower_case) {
       return lower_case ? "hpu" : "HPU";
     case DeviceType::IPU:
       return lower_case ? "ipu" : "IPU";
-    case DeviceType::PrivateUse1:
-      return lower_case ? "privateuseone" : "PRIVATEUSEONE";
+    case DeviceType::MTGPU:
+      return lower_case ? "mtgpu" : "MTGPU";
     default:
       TORCH_CHECK(
           false,
@@ -89,7 +89,7 @@ bool isValidDeviceType(DeviceType d) {
     case DeviceType::Meta:
     case DeviceType::HPU:
     case DeviceType::IPU:
-    case DeviceType::PrivateUse1:
+    case DeviceType::MTGPU:
       return true;
     default:
       return false;
diff --git a/c10/core/DeviceType.h b/c10/core/DeviceType.h
index ca995bc9d9..50fed236c1 100644
--- a/c10/core/DeviceType.h
+++ b/c10/core/DeviceType.h
@@ -32,7 +32,7 @@ enum class DeviceType : int8_t {
   VE = 16, // SX-Aurora / NEC
   Lazy = 17, // Lazy Tensors
   IPU = 18, // Graphcore IPU
-  PrivateUse1 = 19, // PrivateUse1 device
+  MTGPU = 19, // NEW! MTDNN-based GPU
   // NB: If you add more devices:
   //  - Change the implementations of DeviceTypeName and isValidDeviceType
   //    in DeviceType.cpp
@@ -55,7 +55,7 @@ constexpr DeviceType kHPU = DeviceType::HPU;
 constexpr DeviceType kVE = DeviceType::VE;
 constexpr DeviceType kLazy = DeviceType::Lazy;
 constexpr DeviceType kIPU = DeviceType::IPU;
-constexpr DeviceType kPrivateUse1 = DeviceType::PrivateUse1;
+constexpr DeviceType kMTGPU = DeviceType::MTGPU;
 
 // define explicit int constant
 constexpr int COMPILE_TIME_MAX_DEVICE_TYPES =
