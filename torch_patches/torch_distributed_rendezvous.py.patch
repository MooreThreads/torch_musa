diff --git a/torch/distributed/rendezvous.py b/torch/distributed/rendezvous.py
index c12c8bf..d865b89 100644
--- a/torch/distributed/rendezvous.py
+++ b/torch/distributed/rendezvous.py
@@ -144,7 +144,7 @@ def _torchelastic_use_agent_store() -> bool:
     return os.environ.get("TORCHELASTIC_USE_AGENT_STORE", None) == str(True)
 
 
-def _create_c10d_store(hostname, port, rank, world_size, timeout, use_libuv=False) -> Store:
+def _create_c10d_store(hostname, port, rank, world_size, timeout, use_libuv=True) -> Store:
     """
     Smartly creates a c10d Store object on ``rank`` based on whether we need to re-use agent store.
 
@@ -193,7 +193,7 @@ def _tcp_rendezvous_handler(
 
     rank = int(query_dict["rank"])
     world_size = int(query_dict["world_size"])
-    use_libuv = query_dict.get("use_libuv", "0") == "1"
+    use_libuv = query_dict.get("use_libuv", "1") == "1"
     assert result.hostname is not None
 
     store = _create_c10d_store(result.hostname, result.port, rank, world_size, timeout, use_libuv)
@@ -241,7 +241,7 @@ def _env_rendezvous_handler(
 
     master_addr = _get_env_or_raise("MASTER_ADDR")
     master_port = int(_get_env_or_raise("MASTER_PORT"))
-    use_libuv = query_dict.get("use_libuv", os.environ.get("USE_LIBUV", "0")) == "1"
+    use_libuv = query_dict.get("use_libuv", os.environ.get("USE_LIBUV", "1")) == "1"
 
     store = _create_c10d_store(master_addr, master_port, rank, world_size, timeout, use_libuv)
 
