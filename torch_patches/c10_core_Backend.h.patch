diff --git a/c10/core/Backend.h b/c10/core/Backend.h
index 5f3d077..f5875cf 100644
--- a/c10/core/Backend.h
+++ b/c10/core/Backend.h
@@ -48,6 +48,7 @@ enum class Backend {
   Meta,
   QuantizedCPU,
   QuantizedCUDA,
+  QuantizedPrivateUse1,
   QuantizedXPU,
   Undefined,
   MkldnnCPU,
@@ -102,6 +103,8 @@ static inline Backend dispatchKeyToBackend(DispatchKey t) {
     return Backend::QuantizedCPU;
   } else if (t == DispatchKey::QuantizedCUDA) {
     return Backend::QuantizedCUDA;
+  } else if (t == DispatchKey::QuantizedPrivateUse1) {
+    return Backend::QuantizedPrivateUse1;
   } else if (t == DispatchKey::IPU || t == DispatchKey::AutogradIPU) {
     return Backend::IPU;
   } else if (t == DispatchKey::XPU || t == DispatchKey::AutogradXPU) {
@@ -171,6 +174,8 @@ static inline DispatchKey backendToDispatchKey(Backend b) {
       return DispatchKey::QuantizedCPU;
     case Backend::QuantizedCUDA:
       return DispatchKey::QuantizedCUDA;
+    case Backend::QuantizedPrivateUse1:
+      return DispatchKey::QuantizedPrivateUse1;
     case Backend::Undefined:
       return DispatchKey::Undefined;
     case Backend::MPS:
@@ -240,6 +245,7 @@ static inline DeviceType backendToDeviceType(Backend b) {
     case Backend::MTIA:
       return DeviceType::MTIA;
     case Backend::PrivateUse1:
+    case Backend::QuantizedPrivateUse1:
       return DeviceType::PrivateUse1;
     case Backend::Undefined:
       TORCH_CHECK(false, "Undefined backend is not a valid device type");
@@ -301,6 +307,8 @@ static inline const char* toString(Backend b) {
       return "QuantizedCUDA";
     case Backend::QuantizedXPU:
       return "QuantizedXPU";
+    case Backend::QuantizedPrivateUse1:
+      return "QuantizedPrivateUse1";
     case Backend::HPU:
       return "HPU";
     case Backend::MTIA:
