ARG UBUNTU_VERSION

FROM ubuntu:${UBUNTU_VERSION}

ARG UBUNTU_VERSION
ARG MUSA_TOOLKITS_URL
ARG MUDNN_URL
ARG PYTHON_VERSION

SHELL ["/bin/bash", "-c"]

# setup time for system
ENV LANG=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

# using ubuntu official sources often fails to connect
COPY ./common/change_ubuntu_mirror.sh change_ubuntu_mirror.sh
RUN bash change_ubuntu_mirror.sh && \
    rm -f change_ubuntu_mirror.sh

# install basic packages
COPY ./common/install_base.sh install_base.sh
RUN bash install_base.sh && \
    rm -f install_base.sh

# install gcc
ARG GCC_VERSION
COPY ./common/install_gcc.sh install_gcc.sh 
RUN bash install_gcc.sh && \
    rm -f install_gcc.sh

# install musa_toolkit, which includes musa_runtime and mcc
RUN wget --no-check-certificate ${MUSA_TOOLKITS_URL} -O /home/musa_toolkits_install.tar.gz
RUN cd /home && \
    tar -zxf ./musa_toolkits_install.tar.gz && \
    cd ./musa_toolkits_install && \
    bash ./install.sh && \
    rm -f ../musa_toolkits_install.tar.gz && \
    rm -rf ../musa_toolkit*

# install muDNN
RUN wget --no-check-certificate ${MUDNN_URL} -O /home/mudnn.tar && \
    tar -xvf /home/mudnn.tar -C /home && \
    pushd /home/mudnn && \
    bash install_mudnn.sh && \
    rm -f /home/mudnn.tar && \
    rm -rf /home/mudnn && \
    popd

# install math libs
COPY ./common/install_math.sh install_math.sh
RUN bash install_math.sh && \
    rm -f install_math.sh

# install mccl
COPY ./common/install_mccl.sh install_mccl.sh
RUN bash install_mccl.sh && \
    rm -f install_mccl.sh

# install conda
COPY ./common/install_conda.sh install_conda.sh
RUN bash install_conda.sh && \
    rm -f install_conda.sh

# setup conda virtual environment for torch_musa
ENV PATH=/opt/conda/bin:$PATH
COPY ./requirements.txt requirements.txt
RUN ENV_NAME="py"$(echo ${PYTHON_VERSION} | tr -d '.') && \
    conda create -n ${ENV_NAME} python=${PYTHON_VERSION} --yes && \
    source activate ${ENV_NAME} && \
    source deactivate && \
    conda activate ${ENV_NAME} && \
    pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \
    pip install -r requirements.txt && \
    pip install numpy==1.23.1 pytest==7.2.2 protobuf==3.19.0 \
    googleapis-common-protos==1.56.4 importlib-metadata==4.11.3 \
    pillow==9.2.0 pylint==2.17.3 requests && \
    # pip install --no-deps torchvision==0.15.0 && \
    rm -f requirements.txt

# install torch and torch_musa from wheel packages
ARG TORCH_WHL_URL
ARG TORCH_MUSA_WHL_URL
ENV MUSA_HOME=/usr/local/musa
ENV LD_LIBRARY_PATH=$MUSA_HOME/lib:$LD_LIBRARY_PATH
ENV PATH=/usr/local/musa/bin:/opt/conda/bin:$PATH
RUN ENV_NAME="py"$(echo ${PYTHON_VERSION} | tr -d '.') && \
    sudo echo -e ". /opt/conda/etc/profile.d/conda.sh"                            >> ~/.bashrc && \
    sudo echo "export MUSA_HOME=${MUSA_HOME}"                                     >> ~/.bashrc && \
    sudo echo -e "export LD_LIBRARY_PATH=\$MUSA_HOME/lib:\$LD_LIBRARY_PATH\n"     >> ~/.bashrc && \
    sudo echo "export PATH=/usr/local/musa/bin:/opt/conda/bin:$PATH"              >> ~/.bashrc && \
    sudo echo "conda activate ${ENV_NAME}"                                        >> ~/.bashrc && \
    source activate ${ENV_NAME} && \
    source deactivate && \
    conda activate ${ENV_NAME} && \
    mkdir -p /home/whls && \
    wget --no-check-certificate -P /home/whls $TORCH_WHL_URL && \
    wget --no-check-certificate -P /home/whls $TORCH_MUSA_WHL_URL && \
    WHLS=$(find /home/whls -name "*.whl") && \
    pip install ${WHLS} && \
    sudo rm -rf /home/whls && \
    conda deactivate
