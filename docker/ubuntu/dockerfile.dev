ARG BASE_IMG
FROM ${BASE_IMG}

ARG MUSA_TOOLKITS_URL
ARG MUDNN_URL

# maybe update gcc
ARG GCC_VERSION
COPY ./common/install_gcc.sh install_gcc.sh
RUN bash install_gcc.sh && \
    rm -f install_gcc.sh

# install musa_toolkit, which includes musa_runtime and mcc
RUN wget --no-check-certificate ${MUSA_TOOLKITS_URL} -O /home/musa_toolkits_install.tar.gz
RUN cd /home && \
    tar -zxf ./musa_toolkits_install.tar.gz && \
    cd ./musa_toolkits_install && \
    bash ./install.sh && \
    rm -f ../musa_toolkits_install.tar.gz && \
    rm -rf ../musa_toolkit*

# install muDNN
RUN wget --no-check-certificate ${MUDNN_URL} -O /home/mudnn.tar && \
    tar -xvf /home/mudnn.tar -C /home && \
    pushd /home/mudnn && \
    bash install_mudnn.sh && \
    rm -f /home/mudnn.tar && \
    rm -rf /home/*mudnn* && \
    popd

# install math libs & mccl
COPY ./common/install_math.sh install_math.sh
COPY ./common/install_mccl.sh install_mccl.sh
RUN bash install_math.sh && \
    bash install_mccl.sh && \
    rm -f install_math.sh install_mccl.sh

# config git
# RUN git config --global http.sslverify false && \
#     git config --global https.sslverify false

ENV MUSA_HOME=/usr/local/musa
ENV LD_LIBRARY_PATH=$MUSA_HOME/lib:$LD_LIBRARY_PATH
ENV PATH=${MUSA_HOME}/bin:$PATH
COPY ./torch_musa /home/torch_musa
RUN pushd /home/torch_musa && \
    # if mkl was not installed via pip
    # pytorch will look for it under /opt/intel/oneapi
    pip install -r requirements.txt && \
    # install mkl librarie (for static linking)
    bash docker/common/install_mkl.sh && \
    # maybe create softlink for mkl libraries
    bash docker/common/create_softlink4mkl.sh $(dirname $(dirname $(which python)))/lib && \
    pip install pytest==7.2.2 protobuf==3.19.0 \
    googleapis-common-protos==1.56.4 importlib-metadata==4.11.3 \
    pillow==9.2.0 pylint==2.17.3 requests black && \
    # workaround for https://github.com/pytorch/pytorch/issues/99625
    conda install -y "llvm-openmp<16" && \
    export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"} && \
    bash build.sh -t && \
    popd

WORKDIR /tmp
COPY ./vision ./vision
RUN pushd vision && \
    python setup.py install && \
    popd && \
    rm -rf /tmp/vision

WORKDIR /home
