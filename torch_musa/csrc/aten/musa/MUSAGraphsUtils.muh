#pragma once

#include "torch_musa/csrc/aten/musa/MUSAGeneratorImpl.h"
#include "torch_musa/csrc/core/MUSAGraphsC10Utils.h"
#include "torch_musa/csrc/aten/musa/UnpackRaw.muh"


namespace at {
namespace musa {

using CaptureId_t = c10::musa::CaptureId_t;
using CaptureStatus = c10::musa::CaptureStatus;

// Use this version where you don't want to create a MUSA context if none exists.
inline CaptureStatus currentStreamCaptureStatus() {
  return CaptureStatus::None;
}

inline void assertNotCapturing(std::string attempt) {
  auto status = currentStreamCaptureStatus();
  TORCH_CHECK(status == CaptureStatus::None,
              attempt,
              " during MUSA graph capture. If you need this call to be captured, "
              "please file an issue. "
              "Current musaStreamCaptureStatus: ",
              status);
}

inline void errorIfCapturingCudnnBenchmark(std::string version_specific) {
  auto status = currentStreamCaptureStatus();
  TORCH_CHECK(status == CaptureStatus::None,
              "Current musaStreamCaptureStatus: ",
              status,
              "\nCapturing ",
              version_specific,
              "is prohibited. Possible causes of this error:\n"
              "1. No warmup iterations occurred before capture.\n"
              "2. The convolutions you're trying to capture use dynamic shapes, "
              "in which case capturing them is generally prohibited.");
}

} // namespace musa
} // namespace at
